version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.5-node-browsers-legacy
        environment:
          - RAILS_ENV: 'test'

      - image: circleci/mysql:5.7.28
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: yes
          - MYSQL_ROOT_HOST: '%'

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      - run:
          name: Install Dependencies
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run: mv config/database.yml.ci config/database.yml 

      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      - run:
          name: Run RuboCop
          command: bundle exec rubocop

      - run:
          name: Run RSpec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - run: sudo apt-get update && sudo apt-get install python3-pip groff-base
      - run: sudo pip3 install awscli --ignore-installed six

      - run:
          name: authorize-security-group-ingress
          command: |
            IP=`curl -s ifconfig.me`
            echo "#!/bin/bash" > ./sg.sh
            echo "aws configure set region ap-northeast-1" >> ./sg.sh
            echo "aws ec2 authorize-security-group-ingress --group-id sg-0cd1a467be874cb60 --protocol tcp --port 22 --cidr ${IP}/32" >> ./sg.sh
            bash ./sg.sh

      - add_ssh_keys:
          fingerprints:
            - "23:cc:00:e7:8d:d6:64:1c:da:48:de:44:0b:b3:1f:e5"

      - deploy:
          name: Capistrano Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              exit 0
            fi
            bundle exec cap production deploy

      - run:
          name: revoke-security-group-ingress
          command: |
            IP=`curl -s ifconfig.me`
            echo "#!/bin/bash" > ./sg.sh
            echo "aws configure set region ap-northeast-1" >> ./sg.sh
            echo "aws ec2 revoke-security-group-ingress --group-id sg-0cd1a467be874cb60 --protocol tcp --port 22 --cidr ${IP}/32" >> ./sg.sh
            bash ./sg.sh